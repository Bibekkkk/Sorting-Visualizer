"use strict";function Merge(){document.getElementById("Time_Worst").innerText="O(N log N)",document.getElementById("Time_Average").innerText="Θ(N log N)",document.getElementById("Time_Best").innerText="Ω(N log N)",document.getElementById("Space_Worst").innerText="O(N)",merge_partition(c_delay=0,array_size-1),enable_buttons()}function merge_sort(e,i,d){for(var t=e,s=i+1,r=[],_=0,n=e;n<=d;n++)i<t?(r[_++]=div_sizes[s++],div_update(divs[s-1],div_sizes[s-1],"red")):d<s?(r[_++]=div_sizes[t++],div_update(divs[t-1],div_sizes[t-1],"red")):div_sizes[t]<div_sizes[s]?(r[_++]=div_sizes[t++],div_update(divs[t-1],div_sizes[t-1],"red")):(r[_++]=div_sizes[s++],div_update(divs[s-1],div_sizes[s-1],"red"));for(var v=0;v<_;v++)div_sizes[e++]=r[v],div_update(divs[e-1],div_sizes[e-1],"green")}function merge_partition(e,i){if(e<i){var d=Math.floor((e+i)/2);div_update(divs[d],div_sizes[d],"yellow"),merge_partition(e,d),merge_partition(d+1,i),merge_sort(e,d,i)}}
//# sourceMappingURL=merge_sort.min.js.map
